swagger: "2.0"
info:
  title: Ammo Collector API
  description: API for managing request content collections
  version: "1.0"
  contact:
    name: Roman Nikulenkov
    url: https://github.com/n-r-w/collector
tags:
  - name: CollectionService
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /v1/collections:
    get:
      summary: List collections
      description: Returns all collections matching the specified criteria
      operationId: CollectionService_GetCollections
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: "#/definitions/collectorGetCollectionsResponse"
        default:
          description: An unexpected error response.
          schema:
            $ref: "#/definitions/googlerpcStatus"
      parameters:
        - name: statuses
          description: |-
            Statuses to filter by

             - STATUS_PENDING: Collection is created but not yet started
             - STATUS_IN_PROGRESS: Collection is currently running
             - STATUS_FINALIZING: Collection is in process of finalizing
             - STATUS_COMPLETED: Collection has finished successfully
             - STATUS_FAILED: Collection has failed
             - STATUS_CANCELLED: Collection was cancelled by user
          in: query
          required: false
          type: array
          items:
            type: string
            enum:
              - STATUS_PENDING
              - STATUS_IN_PROGRESS
              - STATUS_FINALIZING
              - STATUS_COMPLETED
              - STATUS_FAILED
              - STATUS_CANCELLED
          collectionFormat: multi
        - name: fromTime
          description: Time from which to filter
          in: query
          required: false
          type: string
          format: date-time
        - name: toTime
          description: Time to which to filter
          in: query
          required: false
          type: string
          format: date-time
      tags:
        - collections
    post:
      summary: Create a new collection task
      description: Starts a new collection with specified criteria for message selection and completion
      operationId: CollectionService_CreateTask
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: "#/definitions/collectorCreateTaskResponse"
        default:
          description: An unexpected error response.
          schema:
            $ref: "#/definitions/googlerpcStatus"
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/collectorCreateTaskRequest"
      tags:
        - collections
  /v1/collections/{collectionId}:
    get:
      summary: Get collection details
      description: Returns detailed information about a specific collection
      operationId: CollectionService_GetCollection
      responses:
        "200":
          description: A successful response.
          schema:
            $ref: "#/definitions/collectorGetCollectionResponse"
        default:
          description: An unexpected error response.
          schema:
            $ref: "#/definitions/googlerpcStatus"
      parameters:
        - name: collectionId
          description: Unique identifier for the collection
          in: path
          required: true
          type: string
          format: int64
      tags:
        - collections
    delete:
      summary: Cancel collection
      description: Terminates an active collection
      operationId: CollectionService_CancelCollection
      responses:
        "200":
          description: A successful response.
          schema:
            type: object
            properties: {}
        default:
          description: An unexpected error response.
          schema:
            $ref: "#/definitions/googlerpcStatus"
      parameters:
        - name: collectionId
          description: Unique identifier for the collection
          in: path
          required: true
          type: string
          format: int64
      tags:
        - collections
  /v1/collections/{collectionId}/result:
    get:
      summary: Get collection result
      description: Returns the collection result as a stream of bytes
      operationId: CollectionService_GetResult
      responses:
        "200":
          description: A successful response.(streaming responses)
          schema:
            type: object
            properties:
              result:
                $ref: "#/definitions/collectorGetResultResponse"
              error:
                $ref: "#/definitions/googlerpcStatus"
            title: Stream result of collectorGetResultResponse
        default:
          description: An unexpected error response.
          schema:
            $ref: "#/definitions/googlerpcStatus"
      parameters:
        - name: collectionId
          description: Unique identifier for the collection
          in: path
          required: true
          type: string
          format: int64
      tags:
        - collections
definitions:
  ammocollectorHeader:
    type: object
    properties:
      headerName:
        type: string
        title: Name of the HTTP header to match
      pattern:
        type: string
        title: Regular expression to match against the header value
    title: Header defines a single header matching criteria
  ammocollectorStatus:
    type: string
    enum:
      - STATUS_PENDING
      - STATUS_IN_PROGRESS
      - STATUS_FINALIZING
      - STATUS_COMPLETED
      - STATUS_FAILED
      - STATUS_CANCELLED
    description: |-
      - STATUS_PENDING: Collection is created but not yet started
       - STATUS_IN_PROGRESS: Collection is currently running
       - STATUS_FINALIZING: Collection is in process of finalizing
       - STATUS_COMPLETED: Collection has finished successfully
       - STATUS_FAILED: Collection has failed
       - STATUS_CANCELLED: Collection was cancelled by user
    title: Status represents possible collection states
  collectorCollection:
    type: object
    properties:
      collectionId:
        type: string
        format: int64
        title: Unique identifier for the collection
      status:
        $ref: "#/definitions/ammocollectorStatus"
        title: Status of the collection
      task:
        $ref: "#/definitions/collectorTask"
        title: Collection creation parameters
      requestCount:
        type: string
        format: uint64
        title: Number of requests collected
      resultId:
        type: string
        title: Identifier for the result in S3 storage
      createdAt:
        type: string
        format: date-time
        description: When collection was created
        title: Timestamps
      startedAt:
        type: string
        format: date-time
        title: When collection was started
      updatedAt:
        type: string
        format: date-time
        title: Last update timestamp
      completedAt:
        type: string
        format: date-time
        title: When collection reached terminal state
      errorMessage:
        type: string
        description: Error message if collection failed
        title: Error details
      errorCode:
        type: integer
        format: int64
        title: Error code if collection failed
    title: Collection represents the current state of a collection
  collectorCompletionCriteria:
    type: object
    properties:
      timeLimit:
        type: string
        title: Maximum duration for collection (1 day)
      requestCountLimit:
        type: integer
        format: int64
        title: Maximum number of requests to collect
    title: CompletionCriteria defines when to complete the collection
  collectorCreateTaskRequest:
    type: object
    properties:
      selectionCriteria:
        $ref: "#/definitions/collectorMessageSelectionCriteria"
        title: Selection criteria for requests to collect
      completionCriteria:
        $ref: "#/definitions/collectorCompletionCriteria"
        title: Completion conditions for the collection
    title: CreateTaskRequest contains parameters for starting a new collection
  collectorCreateTaskResponse:
    type: object
    properties:
      collectionId:
        type: string
        format: int64
        title: Unique identifier for the collection
    title: CreateTaskResponse returns information about started collection
  collectorGetCollectionResponse:
    type: object
    properties:
      collection:
        $ref: "#/definitions/collectorCollection"
        title: Collection information
    title: GetCollectionResponse contains status information for a collection
  collectorGetCollectionsResponse:
    type: object
    properties:
      collections:
        type: array
        items:
          type: object
          $ref: "#/definitions/collectorCollection"
        title: All active collections
    title: GetCollectionsResponse contains all active collections
  collectorGetResultResponse:
    type: object
    properties:
      content:
        type: string
        format: byte
        title: Chunk of bytes from the zip archive
    title: GetResultResponse contains a chunk of the zip archive content
  collectorMessageSelectionCriteria:
    type: object
    properties:
      handler:
        type: string
        title: HTTP/gRPC handler to match
      headerCriteria:
        type: array
        items:
          type: object
          $ref: "#/definitions/ammocollectorHeader"
        title: Header criteria to match against request headers
    title: MessageSelectionCriteria defines criteria for selecting messages to collect
  collectorTask:
    type: object
    properties:
      messageSelection:
        $ref: "#/definitions/collectorMessageSelectionCriteria"
        title: Criteria for selecting messages
      completion:
        $ref: "#/definitions/collectorCompletionCriteria"
        title: Criteria for completing collection
    title: Task contains parameters for creating a new collection
  googlerpcStatus:
    type: object
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
      details:
        type: array
        items:
          type: object
          $ref: "#/definitions/protobufAny"
  protobufAny:
    type: object
    properties:
      "@type":
        type: string
    additionalProperties: {}
